[package]
description = "OpenEthereum (EthCore) Library"
homepage = "https://github.com/openethereum/openethereum"
license = "GPL-3.0"
name = "ethcore"
version = "1.12.0"
authors = ["Parity Technologies <admin@parity.io>"]

[dependencies]
ansi_term = "0.10"
blooms-db = { path = "../db/blooms-db", optional = true }
common-types = { path = "types" }
crossbeam-utils = "0.6"
crossbeam-channel = "0.5.2"
eip-152 = { version = "0.1", path = "../util/EIP-152" }
env_logger = { version = "0.5", optional = true }
error-chain = { version = "0.12", default-features = false }
ethabi = "12.0.0"
ethabi-contract = "11.0.0"
ethabi-derive = { git = 'https://github.com/rimrakhimov/ethabi', branch = 'rimrakhimov/remove-syn-export-span' }
ethash = { path = "../concensus/ethash" }
ethcore-blockchain = { path = "./blockchain" }
ethcore-bloom-journal = { path = "../db/bloom" }
ethcore-builtin = { path = "../vm/builtin" }
ethcore-call-contract = { path = "../vm/call-contract" }
ethcore-db = { path = "../db/db" }
ethcore-io = { path = "../runtime/io" }
ethcore-miner = { path = "../concensus/miner" }
ethcore-stratum = { path = "../concensus/miner/stratum", optional = true }
ethereum-types = "0.9.2"
ethjson = { path = "../ethjson" }
ethkey = { path = "../accounts/ethkey" }
evm = { path = "../vm/evm" }
globset = "0.4"
hash-db = "0.11.0"
itertools = "0.5"
journaldb = { path = "../db/journaldb" }
keccak-hash = "0.5.0"
keccak-hasher = { path = "../util/keccak-hasher" }
kvdb = "0.1"
kvdb-memorydb = "0.1"
kvdb-rocksdb = { version = "0.1.3", optional = true }
lazy_static = "1.2.0"
len-caching-lock = { path = "../util/len-caching-lock" }
log = "0.4"
lru-cache = "0.1"
macros = { path = "../util/macros" }
maplit = "1"
memory-cache = { path = "../util/memory-cache" }
memory-db = { path = "../db/memory-db" }
num_cpus = "1.2"
parity-bytes = "0.1"
parity-crypto = { version = "0.6.2", features = [ "publickey" ] }
parity-snappy = "0.1"
parity-util-mem = "0.7"
parking_lot = "0.11.1"
trie-db = "0.11.0"
patricia-trie-ethereum = { path = "../db/patricia-trie-ethereum" }
rand = "0.7.3"
rand_xorshift = "0.2.0"
rayon = "1.1"
regex = "1.3.9"
rlp = { version = "0.4.6" }
rlp_derive = { path = "../util/rlp-derive" }
rustc-hex = "1.0"
serde = "1.0"
serde_derive = "1.0"
serde_json = "1.0"
stats = { path = "../util/stats" }
tempdir = {version="0.3", optional = true}
tempfile = "3.1.0"
time-utils = { path = "../util/time-utils" }
trace-time = "0.1"
triehash-ethereum = { version = "0.2",  path = "../util/triehash-ethereum" }
unexpected = { path = "../util/unexpected" }
reth-util = { git = "https://github.com/gnosis/reth.git", rev = "573e128", package="reth-util" }
using_queue = { path = "../concensus/miner/using-queue" }
vm = { path = "../vm/vm" }
walkdir = "2.3"
wasm = { path = "../vm/wasm" }
derive_more = "0.99"
scopeguard = "1.1.0"

[dev-dependencies]
blooms-db = { path = "../db/blooms-db" }
criterion = "0.2"
env_logger = "0.5"
ethcore-accounts = { path = "../accounts" }
fetch = { path = "../net/fetch" }
hex-literal = "0.2.1"
kvdb-rocksdb = "0.1.3"
parity-runtime = { path = "../runtime/runtime" }
rlp_compress = { path = "../util/rlp-compress" }
tempdir = "0.3"
trie-standardmap = "0.15.2"

[features]
parity = ["work-notify", "price-info", "stratum"]
# Large optional features that are enabled by default for Parity,
# but might be omitted for other dependent crates.
work-notify = ["ethcore-miner/work-notify"]
price-info = ["ethcore-miner/price-info"]
stratum = [ "ethcore-stratum" ]


# Disables seal verification for mined blocks.
# This allows you to submit any seal via RPC to test and benchmark
# how fast pending block get's created while running on the mainnet.
miner-debug = []
# Display EVM debug traces.
evm-debug = ["evm/evm-debug"]
# Display EVM debug traces when running tests.
evm-debug-tests = ["evm-debug", "evm/evm-debug-tests"]
# Measure time of transaction execution.
# Whenever the transaction execution time (in millis) exceeds the value of
# SLOW_TX_DURATION env variable (provided compile time!)
# EVM debug traces are printed.
slow-blocks = []
# Run JSON consensus tests.
json-tests = ["env_logger", "test-helpers", "to-pod-full"]
# Skip JSON consensus tests with pending issues.
ci-skip-tests = []
# Run memory/cpu heavy tests.
test-heavy = []
# Compile test helpers
test-helpers = ["tempdir", "kvdb-rocksdb", "blooms-db", "common-types/test-helpers"]
# Enables slow 'to-pod-full' method for use in tests and evmbin.
to-pod-full = []

[[bench]]
name = "builtin"
harness = false
